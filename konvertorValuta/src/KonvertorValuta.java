/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jovan Milutinovic
 */
public class KonvertorValuta extends javax.swing.JFrame {

    /**
     * Creates new form KonvertorValuta
     */
    public KonvertorValuta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        kolicina = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        iz = new javax.swing.JComboBox<>();
        u = new javax.swing.JComboBox<>();
        izracunato = new javax.swing.JLabel();
        konvertuj = new javax.swing.JButton();
        valuta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Kolicina:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 60, 30));
        getContentPane().add(kolicina, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 22, 90, 30));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Iz:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("U:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        iz.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Srpski dinar", "Evro", "Americki dolar", "Engleska funta", "Svajcarski franak", " " }));
        jPanel1.add(iz, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        u.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Srpski dinar", "Evro", "Americki dolar", "Engleska funta", "Svajcarski franak", " " }));
        jPanel1.add(u, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));
        jPanel1.add(izracunato, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 70, 20));

        konvertuj.setText("Konvertuj");
        konvertuj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                konvertujMouseClicked(evt);
            }
        });
        jPanel1.add(konvertuj, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 150, 90, -1));
        jPanel1.add(valuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 60, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 400, 210));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void konvertujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_konvertujMouseClicked
        double vrednost = Double.parseDouble(kolicina.getText());
        //dinar u...
        if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Evro")){
        izracunato.setText(vrednost/117+"");
        valuta.setText("Evra");
        }
         if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Americki dolar")){
        izracunato.setText(vrednost/98.933+"");
        valuta.setText("Dolara");
        }
          if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Engleska funta")){
        izracunato.setText(vrednost/130.9833+"");
        valuta.setText("Funti");
        }
           if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Svajcarski franak")){
        izracunato.setText(vrednost/108.3936+"");
        valuta.setText("Franaka");
        }
            if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Australijski dolar")){
        izracunato.setText(vrednost/71.9299+"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Kanadski dolar")){
        izracunato.setText(vrednost/75.4582+"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Ceska kruna")){
        izracunato.setText(vrednost/4.4424+"");
        valuta.setText("kruna");
        }
         if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Danska kruna")){
        izracunato.setText(vrednost/15.7283+"");
        valuta.setText("kruna");
        }
        if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Madjarska forinta")){
        izracunato.setText(vrednost/0.32626+"");
        valuta.setText("forinti");
        }
          if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Japanski Jen")){
        izracunato.setText(vrednost/0.95028+"");
        valuta.setText("jena");
        }
        if (iz.getSelectedItem().equals("Srpski dinar") && u.getSelectedItem().equals("Kuvajtski Dinar")){
        izracunato.setText(vrednost/0.95028+"");
        valuta.setText("dinara");
        }
        //evro u...
        
         if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Srpski dinar")){
        izracunato.setText(vrednost/0.00848+"");
        valuta.setText("dinara");
        }
         if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Americki dolar")){
        izracunato.setText(vrednost/0.84154+"");
        valuta.setText("dolara");
        }
          if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Engleska funta")){
        izracunato.setText(vrednost/1.11744 +"");
        valuta.setText("Funti");
        }
           if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Svajcarski franak")){
        izracunato.setText(vrednost/0.92473+"");
        valuta.setText("Franaka");
        }
            if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Australijski dolar")){
        izracunato.setText(vrednost/0.61365+"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Kanadski dolar")){
        izracunato.setText(vrednost/0.64375 +"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Ceska kruna")){
        izracunato.setText(vrednost/0.0379 +"");
        valuta.setText("kruna");
        }
         if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Danska kruna")){
        izracunato.setText(vrednost/0.13418+"");
        valuta.setText("kruna");
        }
        if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Madjarska forinta")){
        izracunato.setText(vrednost/0.00278+"");
        valuta.setText("forinti");
        }
          if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Japanski Jen")){
        izracunato.setText(vrednost/0.00811 +"");
        valuta.setText("jena");
        }
        if (iz.getSelectedItem().equals("Evro") && u.getSelectedItem().equals("Kuvajtski Dinar")){
        izracunato.setText(vrednost/2.75179+"");
        valuta.setText("dinara");
        }
        
        //americki dolar u....
        
        if (iz.getSelectedItem().equals("Americki dolar") && u.getSelectedItem().equals("Srpski dinar")){
        izracunato.setText(vrednost*98.6425 +"");
        valuta.setText("Dinara");
        }
         if (iz.getSelectedItem().equals("Americki dolar") && u.getSelectedItem().equals("Evro")){
        izracunato.setText(vrednost/0.84154 +"");
        valuta.setText("Evra");
        }
          if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Engleska funta")){
        izracunato.setText(vrednost/1.32786+"");
        valuta.setText("Funti");
        }
           if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Svajcarski franak")){
        izracunato.setText(vrednost/1.09885+"");
        valuta.setText("Franaka");
        }
            if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Australijski dolar")){
        izracunato.setText(vrednost/0.7292+"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Kanadski dolar")){
        izracunato.setText(vrednost/0.76497+"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Ceska kruna")){
        izracunato.setText(vrednost/0.04504+"");
        valuta.setText("kruna");
        }
         if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Danska kruna")){
        izracunato.setText(vrednost/0.15945+"");
        valuta.setText("kruna");
        }
        if (iz.getSelectedItem().equals("Americki dolar") && u.getSelectedItem().equals("Madjarska forinta")){
        izracunato.setText(vrednost/0.00331+"");
        valuta.setText("forinti");
        }
          if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Japanski Jen")){
        izracunato.setText(vrednost/0.00963+"");
        valuta.setText("jena");
        }
        if (iz.getSelectedItem().equals("Americki dolar")  && u.getSelectedItem().equals("Kuvajtski Dinar")){
        izracunato.setText(vrednost/3.26995 +"");
        valuta.setText("dinara");
        }
        
        //engleska funta u.....
        
        if (iz.getSelectedItem().equals("Engleska funta") && u.getSelectedItem().equals("Srpski dinar")){
        izracunato.setText(vrednost/0.00759 +"");
        valuta.setText("Dinara");
        }
         if (iz.getSelectedItem().equals("Engleska funta") && u.getSelectedItem().equals("Evro")){
        izracunato.setText(vrednost/0.8949 +"");
        valuta.setText("Evra");
        }
          if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Americki dolar")){
        izracunato.setText(vrednost/0.75309 +"");
        valuta.setText("Dolara");
        }
           if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Svajcarski franak")){
        izracunato.setText(vrednost/0.82754+"");
        valuta.setText("Franaka");
        }
            if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Australijski dolar")){
        izracunato.setText(vrednost/0.54915 +"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Kanadski dolar")){
        izracunato.setText(vrednost/0.57609 +"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Ceska kruna")){
        izracunato.setText(vrednost/0.03392+"");
        valuta.setText("kruna");
        }
         if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Danska kruna")){
        izracunato.setText(vrednost/0.12008+"");
        valuta.setText("kruna");
        }
        if (iz.getSelectedItem().equals("Engleska funta") && u.getSelectedItem().equals("Madjarska forinta")){
        izracunato.setText(vrednost/0.00249+"");
        valuta.setText("forinti");
        }
          if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Japanski Jen")){
        izracunato.setText(vrednost/0.00725+"");
        valuta.setText("jena");
        }
        if (iz.getSelectedItem().equals("Engleska funta")  && u.getSelectedItem().equals("Kuvajtski Dinar")){
        izracunato.setText(vrednost/2.46257  +"");
        valuta.setText("dinara");
        }
        
        //svajcarski franak u....
        
        if (iz.getSelectedItem().equals("Svajcarski franak") && u.getSelectedItem().equals("Srpski dinar")){
        izracunato.setText(vrednost/0.00917 +"");
        valuta.setText("Dinara");
        }
         if (iz.getSelectedItem().equals("Svajcarski franak") && u.getSelectedItem().equals("Evro")){
        izracunato.setText(vrednost/1.0814 +"");
        valuta.setText("Evra");
        }
          if (iz.getSelectedItem().equals("Svajcarski franak")  && u.getSelectedItem().equals("Americki dolar")){
        izracunato.setText(vrednost/0.91004 +"");
        valuta.setText("Dolara");
        }
            if (iz.getSelectedItem().equals("Svajcarski franak")  && u.getSelectedItem().equals("Australijski dolar")){
        izracunato.setText(vrednost/0.6636 +"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Svajcarski franak")  && u.getSelectedItem().equals("Kanadski dolar")){
        izracunato.setText(vrednost/0.69615 +"");
        valuta.setText("Dolara");
        }
        if (iz.getSelectedItem().equals("Svajcarski franak")  && u.getSelectedItem().equals("Ceska kruna")){
        izracunato.setText(vrednost/0.04098+"");
        valuta.setText("kruna");
        }
         if (iz.getSelectedItem().equals("Svajcarski franak")  && u.getSelectedItem().equals("Danska kruna")){
        izracunato.setText(vrednost/0.1451 +"");
        valuta.setText("kruna");
        }
        if (iz.getSelectedItem().equals("Svajcarski franak") && u.getSelectedItem().equals("Madjarska forinta")){
        izracunato.setText(vrednost/0.00301+"");
        valuta.setText("forinti");
        }
          if (iz.getSelectedItem().equals("Svajcarski franak")  && u.getSelectedItem().equals("Japanski Jen")){
        izracunato.setText(vrednost/0.00877+"");
        valuta.setText("jena");
        }
        if (iz.getSelectedItem().equals("Svajcarski franak") && u.getSelectedItem().equals("Kuvajtski Dinar")){
        izracunato.setText(vrednost/2.97578  +"");
        valuta.setText("dinara");
        }
    }//GEN-LAST:event_konvertujMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonvertorValuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonvertorValuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonvertorValuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonvertorValuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonvertorValuta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> iz;
    private javax.swing.JLabel izracunato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField kolicina;
    private javax.swing.JButton konvertuj;
    private javax.swing.JComboBox<String> u;
    private javax.swing.JLabel valuta;
    // End of variables declaration//GEN-END:variables
}
